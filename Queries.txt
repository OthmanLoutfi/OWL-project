# Get all stations :

SELECT * WHERE {
  ?poi rdf:type ns:Station.
  ?poi ns:hasLatitude ?lat.
  ?poi ns:hasLongitude ?long.
  ?poi ns:hasName ?name.
  ?poi ns:hasDistrict ?district.
} 


# get all poi coordinate, names, district

SELECT * WHERE {
  {?poi rdf:type ns:Station} union {?poi rdf:type ns:Camping} union {?poi rdf:type ns:Hotel}.
  
  ?poi ns:hasLatitude ?lat.
  ?poi ns:hasLongitude ?long.
  ?poi ns:hasName ?name.
  ?poi ns:hasDistrict ?district.
} 


# List the name of all train station. For each one, display its city.

SELECT * WHERE {
  ?poi rdf:type ns:Station.
  ?poi ns:hasName ?name.
  ?poi ns:hasDistrict ?city.
} 



# List the name of travellers older than 51 years

SELECT * WHERE {
  ?poi rdf:type ns:Traveler.
  ?poi ns:hasName ?Name.
  ?poi ns:hasAge ?Age.
 FILTER(?Age<51)
} 


# Get traveler from join to trip object

SELECT * WHERE {
  ?t rdf:type ns:Trip.
  ?t ns:hasTraveler ?tra.
  ?tra ns:hasName ?name.
  ?tra ns:hasAge ?age.
  
}


# List name of travellers with optional properties

SELECT * WHERE {
  ?tr rdf:type ns:Traveler.
  ?tr ns:hasName ?name.
  OPTIONAL {  ?tr ns:hasAge ?age. }
  OPTIONAL {?tr ns:hasEmail ?email.}
} 


# List all trips with optional travelers


SELECT * WHERE {
  ?tr rdf:type ns:Trip.
  ?tr ns:hasArrival ?arr.
  ?tr ns:hasDeparture ?dep.
  OPTIONAL {  ?tr ns:hasTraveler ?tra. }
} 



# Construct query : Construct RDF triple of all station that contains District

CONSTRUCT {
?station rdf:type ns:Station.
}
WHERE {?station ns:hasDistrict ?capital.}


# ASK query : Search if Berlin is a district of station. It will return true or false

ASK {SELECT * WHERE { ?tr rdf:type  ns:Station.
 ?tr ns:hasDistrict " Berlin".
           }}
           
# DESCRIBE query : Describe content of Station as RDF-triples

DESCRIBE ?tr
WHERE  { ?tr rdf:type  ns:Station. 
}



# SWRL RULES

Traveler(?x)  ->  Person(?x)
hasArrival(?x1, ?x2) ^ hasDeparture(?x1, ?x3) -> hasComplete(?x1, ?x1)



# Getcoord of all trips

PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX ns: <http://www.owl-ontologies.com/unnamed.owl#>

SELECT * WHERE {
  ?t rdf:type ns:Trip.
  ?t ns:hasDeparture ?dep.
  ?t ns:hasArrival ?ar.
  ?dep ns:hasLatitude ?latdep.
  ?dep ns:hasLongitude ?longdep.
  ?ar ns:hasLatitude ?latar.
  ?ar ns:hasLongitude ?longar.
  
  
}
